name: PyInstaller Build

on: [ push ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-13, windows-2025 ]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v4
      - uses: benjlevesque/short-sha@v3.0
        name: Get build commit short SHA
        id: short-sha
        with:
          length: 7
      - name: Set OS short name and file extension
        run: |
          OS_NAME=$(echo "${{ matrix.os }}" | sed -E 's/-.*//' | tr -d '\r\n')
          EXT=""
          if [ "$OS_NAME" = "windows" ]; then
            EXT=".exe"
          fi
          echo "OS_SHORT_NAME=$OS_NAME" >> $GITHUB_ENV
          echo "EXTENSION=$EXT" >> $GITHUB_ENV
        shell: bash
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: PyInstaller Build
        run: |
          pyinstaller --onefile -F main.py -n mullvad-ping-py -i assets/favicon.ico
      - name: Rename Binary
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              mv dist/mullvad-ping-py dist/mullvad-ping-py-${{ env.OS_SHORT_NAME }}-${{ env.SHA }}
          elif [ "$RUNNER_OS" == "Windows" ]; then
              mv dist/mullvad-ping-py.exe dist/mullvad-ping-py-${{ env.OS_SHORT_NAME }}-${{ env.SHA }}.exe
          elif [ "$RUNNER_OS" == "macOS" ]; then
              mv dist/mullvad-ping-py dist/mullvad-ping-py-${{ env.OS_SHORT_NAME }}-${{ env.SHA }}
          fi
        shell: bash
      - uses: actions/upload-artifact@v4
        name: Upload Artifact
        with:
          name: mullvad-ping-py-${{ env.OS_SHORT_NAME }}-${{ env.SHA }}${{ env.EXTENSION }}
          path: dist/mullvad-ping-py-${{ env.OS_SHORT_NAME }}-${{ env.SHA }}${{ env.EXTENSION }}